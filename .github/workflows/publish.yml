# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - run: npx playwright install
      - run: npm run test

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/
          scope: '@numbersprotocol'

      - name: Check version changes
        uses: EndBug/version-check@v2
        id: check

      - name: Build
        if: steps.check.outputs.changed == 'true'
        run: |
          npm ci
          npm run build && cp dist/capture-eye.bundled.js .

      - name: Publish to GitHub Registry
        if: steps.check.outputs.changed == 'true'
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM Registry
        if: steps.check.outputs.changed == 'true'
        run: npm publish --registry https://registry.npmjs.org/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get changelog
        if: steps.check.outputs.changed == 'true'
        id: changelog
        run: |
          echo "::set-output name=changes::$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'%h %s')"

      - name: Create Release
        id: create_release
        if: steps.check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check.outputs.version }}
          release_name: ${{ steps.check.outputs.version }}
          body: |
            Changes:
            ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
