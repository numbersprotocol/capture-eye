{"version":3,"file":"capture-eye.js","sourceRoot":"","sources":["../src/capture-eye.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAGxD,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAgBxC,IAAI,QAAQ;QACV,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC9C,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QAtBV;;;WAGG;QAEH,aAAQ,GAAG,KAAK,CAAC;QAEjB;;WAEG;QAEH,QAAG,GAAG,EAAE,CAAC;QAYP;;WAEG;QACH,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,yDAAyD,CAAC;QACtE,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;QACxB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAA;;;iBAGE,IAAI,CAAC,SAAS;qBACV,IAAI,CAAC,eAAe;;mBAEtB,QAAQ,CAAC,GAAG,CAAC,cAAc;;KAEzC,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;UAGL,IAAI,CAAC,cAAc,EAAE;;KAE1B,CAAC;IACJ,CAAC;IAEQ,KAAK,CAAC,iBAAiB;QAC9B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,YAAY,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE,CAAC;QAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,cAAc,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACxD,YAAY,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,eAAe;QACb,MAAM,YAAY,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,YAAY,CAAC,QAAQ,EAAE;YACzB,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC3C;IACH,CAAC;IAEO,KAAK,CAAC,SAAS;QACrB,YAAY,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjD,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,+DAA+D;IACtG,CAAC;;AA3Ee,iBAAM,GAAG,SAAS,EAAE,AAAd,CAAe;AAOrC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;4CACX;AAMjB;IADC,QAAQ,EAAE;uCACF;AAdE,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CA6EtB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Constant } from './constant.js';\nimport { getStyles } from './styles.js';\nimport { ModalManager } from './modal/modal_manager.js';\nimport { CaptureEyeModal } from './modal/capture-eye-modal.js';\n\n@customElement('capture-eye')\nexport class CaptureEye extends LitElement {\n  static override styles = getStyles();\n\n  /**\n   * If yes, start fetching asset data when the Capture Eye is loaded.\n   * Otherwise the data will only be fetched when the panel is opened.\n   */\n  @property({ type: Boolean })\n  prefetch = false;\n\n  /**\n   * Nid of the asset.\n   */\n  @property()\n  nid = '';\n\n  get assetUrl() {\n    return `${Constant.url.ipfsGateway}/${this.nid}`;\n  }\n\n  get assetProfileUrl() {\n    return `${Constant.url.profile}${this.nid}`;\n  }\n\n  constructor() {\n    super();\n    /*\n     * Inject link stylesheet to DOM directly since it will not work in shadow DOM\n     */\n    const font = document.createElement('link');\n    font.href = 'https://static-cdn.numbersprotocol.io/fonts/degular.css';\n    font.rel = 'stylesheet';\n    document.head.appendChild(font);\n  }\n\n  buttonTemplate() {\n    return html`\n      <div\n        class=\"capture-eye-button\"\n        @click=${this.showModal}\n        @mouseover=${this.handleMouseOver}\n      >\n        <img src=${Constant.url.captureEyeIcon} alt=\"Capture Eye\" />\n      </div>\n    `;\n  }\n\n  override render() {\n    return html`\n      <div class=\"capture-eye-container\">\n        <slot></slot>\n        ${this.buttonTemplate()}\n      </div>\n    `;\n  }\n\n  override async connectedCallback() {\n    super.connectedCallback();\n    ModalManager.getInstance().initializeModal();\n    if (this.prefetch) {\n      customElements.whenDefined('capture-eye-modal').then(() => {\n        ModalManager.getInstance().updateModal(this.nid, false);\n      });\n    }\n  }\n\n  handleMouseOver() {\n    const modalManager = ModalManager.getInstance();\n    if (modalManager.isHidden) {\n      modalManager.updateModal(this.nid, false);\n    }\n  }\n\n  private async showModal() {\n    ModalManager.getInstance().updateModal(this.nid);\n    console.debug(CaptureEyeModal.name); // The line ensures CaptureEyeModal is included in compilation.\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'capture-eye': CaptureEye;\n  }\n}\n"]}